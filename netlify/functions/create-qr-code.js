const fetch = require("node-fetch");
const { shopId, secretKey } = require("../../config");

console.log("shopId:", shopId);
console.log("secretKey:", secretKey);


exports.handler = async (event) => {
  try {
    console.log("üîπ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω");

    const { amount } = JSON.parse(event.body);
    console.log("üîπ –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞:", amount);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ shopId –∏ secretKey
    if (!shopId || !secretKey) {
      throw new Error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ YOOKASSA_SHOP_ID –∏–ª–∏ YOOKASSA_SECRET_KEY");
    }

    const authHeader = `Basic ${Buffer.from(`${shopId}:${secretKey}`).toString("base64")}`;
    console.log("üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:", authHeader);

    const response = await fetch("https://api.yookassa.ru/v3/payments", {
      method: "POST",
      headers: {
        "Authorization": authHeader,
        "Content-Type": "application/json",
        "Idempotence-Key": Date.now().toString(),
      },
      body: JSON.stringify({
        amount: { value: amount, currency: "RUB" },
        confirmation: { type: "qr", return_url: "https://your-website.com/success" },
        description: "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–ë–ü",
      }),
    });

    const data = await response.json();
    console.log("üîπ –û—Ç–≤–µ—Ç –æ—Ç –Æ–∫–∞—Å—Å—ã:", data);

    if (!data.confirmation || !data.confirmation.confirmation_url) {
      throw new Error("‚ùå –Æ–∫–∞—Å—Å–∞ –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ QR-–∫–æ–¥");
    }

    return {
      statusCode: 200,
      body: JSON.stringify({ qrCodeUrl: data.confirmation.confirmation_url }),
    };

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ API:", error);
    return {
      statusCode: 500,
      body: JSON.stringify({ error: error.message }),
    };
  }
};
